{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MTBH.vn\\\\Documents\\\\GitHub\\\\ecomerce\\\\client\\\\src\\\\pages\\\\auth\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { auth, googleAuthProvider } from '../../firebase';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { sendSignInLinkToEmail, signInWithEmailAndPassword, getAuth, sendPasswordResetEmail, fetchSignInMethodsForEmail } from 'firebase/auth';\nimport { Button } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const {\n    user\n  } = useSelector(state => ({\n    ...state\n  }));\n  useEffect(() => {\n    if (user && user.token) {\n      window.history.pushState({}, undefined, \"/\");\n      window.location.reload();\n    }\n  }, [user]);\n  const config = {\n    url: `http://localhost:3000/login`,\n    handleCodeInApp: true\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const auth = getAuth();\n    await sendPasswordResetEmail(auth, email, config).then(() => {\n      setEmail('');\n      toast.success('Check ur email 4 password reset link');\n    }).catch(error => {\n      if (email === \"\" && error.code === \"auth/missing-email\") {\n        toast.error(\"Hãy nhập email\");\n      }\n      if (email && error.code === \"auth/missing-email\") {\n        toast.error(\"Email không tồn tại\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container col-md-6 offset-md-3 p-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Forgot password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        autoFocus: true,\n        type: \"email\",\n        value: email,\n        className: \"form-control\",\n        onChange: e => {\n          setEmail(e.target.value);\n        },\n        placeholder: \"Nh\\u1EADp email\",\n        style: {\n          margin: '10px 0'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn btn-raised\",\n        type: \"primary\",\n        block: true,\n        size: \"large\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(ForgotPassword, \"8xE79YjeKNxI59qwkl15Vp6/kmE=\", false, function () {\n  return [useSelector];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","useEffect","auth","googleAuthProvider","toast","sendSignInLinkToEmail","signInWithEmailAndPassword","getAuth","sendPasswordResetEmail","fetchSignInMethodsForEmail","Button","useSelector","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","user","state","token","window","history","pushState","undefined","location","reload","config","url","handleCodeInApp","handleSubmit","e","preventDefault","then","success","catch","error","code","className","children","fileName","_jsxFileName","lineNumber","columnNumber","autoFocus","type","value","onChange","target","placeholder","style","margin","block","size","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MTBH.vn/Documents/GitHub/ecomerce/client/src/pages/auth/ForgotPassword.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {auth, googleAuthProvider} from '../../firebase';\r\nimport {toast} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { sendSignInLinkToEmail, signInWithEmailAndPassword, getAuth, sendPasswordResetEmail, fetchSignInMethodsForEmail} from 'firebase/auth';\r\nimport { Button } from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ForgotPassword = () => {\r\n    const [email, setEmail] = useState(\"\")\r\n    const {user} = useSelector((state) => ({...state}))\r\n\r\n    useEffect(() => {\r\n        if(user && user.token){\r\n            window.history.pushState({}, undefined, \"/\")\r\n            window.location.reload()\r\n        } \r\n    }, [user])\r\n\r\n    const config = {\r\n        url: `http://localhost:3000/login`,\r\n        handleCodeInApp: true\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const auth = getAuth()\r\n            await sendPasswordResetEmail(auth, email, config)\r\n            .then(() => {\r\n                setEmail('')\r\n                toast.success('Check ur email 4 password reset link')\r\n            })\r\n            .catch((error) => {\r\n                if(email === \"\" && error.code === \"auth/missing-email\"){\r\n                    toast.error(\"Hãy nhập email\")\r\n                }\r\n                if(email && error.code === \"auth/missing-email\"){\r\n                    toast.error(\"Email không tồn tại\")\r\n                }\r\n            })\r\n    }\r\n\r\n    return(\r\n        <div className=\"container col-md-6 offset-md-3 p-5\">\r\n            <h4>Forgot password</h4>\r\n            <form>\r\n                <input autoFocus type=\"email\" value={email} className='form-control' onChange={e => {setEmail(e.target.value)}} \r\n                placeholder=\"Nhập email\" style={{margin: '10px 0'}}></input>\r\n                <Button className=\"btn btn-raised\" type=\"primary\" block size=\"large\"  onClick={handleSubmit}>Submit</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default ForgotPassword;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}